# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [develop, tauri]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Deploy-to-fddev:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v1
        with:
          # Version Spec of the version to use.  Examples: 10.x, 10.15.1, >=10.15.0
          node-version: 16 # optional, default is 10.x

      - name: npm i
        # You may pin to the exact commit or the version.
        # uses: EgorDm/gha-yarn-node-cache@5e3a518810b21a8e0e1d236a3db83a18cfc1be9e
        run: npm i

      - name: build
        run: CI=false npm run build

      - name: Deploy
        # You may pin to the exact commit or the version.
        # uses: SamKirkland/FTP-Deploy-Action@da0d77ff390a13097c60f9b9eb954e503a480d97
        uses: easingthemes/ssh-deploy@v2.1.5
        with:
          REMOTE_HOST: "78.47.56.63"
          REMOTE_USER: githubactions
          TARGET: "/var/www/fddev.freeyourstream.com/"
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          # The local folder to copy, defaults to root project folder
          SOURCE: "build/"

      - name: Actions for Discord
        uses: Ilshidur/action-discord@0.0.2
        env:
          DISCORD_WEBHOOK: ${{ secrets.WEBHOOK_URL_CONF_DEV }}
        with:
          args: "A new develop version has been deployed! https://fddev.freeyourstream.com"

      - name: Cloudflare Purge Cache
        uses: jakejarvis/cloudflare-purge-action@v0.3.0
        env:
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
  
  build-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v2
    - uses: Swatinem/rust-cache@v2
      with:
        shared-key: "tauri"
    - name: setup node
      uses: actions/setup-node@v1
      with:
        node-version: 16
    - name: get version
      run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

    - name: install Rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: install dependencies (ubuntu only)
      if: matrix.platform == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf libudev-dev
    - name: install app dependencies and build it
      env:
        CI: false
      run: npm install && npm run tauri:build
    - name: debug ls
      run: ls src-tauri/target/release/bundle/
    - uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        artifacts: "src-tauri/target/release/bundle/*/*.*"
        token: ${{ secrets.GITHUB_TOKEN }}
        body: always up-to-date. maybe unstable
        tag: "dev"

        commit: develop